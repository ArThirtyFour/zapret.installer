#!/bin/bash



manage_service() {
    case "$INIT_SYSTEM" in
        systemd)
            SYSTEMD_PAGER=cat systemctl "$1" zapret
            ;;
        openrc)
            rc-service zapret "$1"
            ;;
        runit|runit-artix)
            sv "$1" zapret
            ;;
        sysvinit)
            service zapret "$1"
            ;;
        procd)
            service zapret "$1"
    esac
}

manage_autostart() {
    case "$INIT_SYSTEM" in
        systemd)
            systemctl "$1" zapret
            ;;
        runit)
            if [[ "$1" == "enable" ]]; then
                ln -fs /opt/zapret/init.d/runit/zapret/ /var/service/
            else
                rm -f /var/service/zapret
            fi
            ;;
        runit-artix)
            if [[ "$1" == "enable" ]]; then
                ln -fs /opt/zapret/init.d/runit/zapret/ /run/runit/service/
            else
                rm -f /run/runit/service/zapret
            fi
            ;;
        sysvinit)
            if [[ "$1" == "enable" ]]; then
                update-rc.d zapret defaults
            else
                update-rc.d -f zapret remove
            fi
            ;;
        openrc)
            service zapret "$1"
            ;;
        procd)
            service zapret "$1"
    esac
}

check_zapret_exist() {
    case "$INIT_SYSTEM" in
        systemd)
            if [ -f /etc/systemd/system/timers.target.wants/zapret-list-update.timer ]; then
                service_exists=true
            else
                service_exists=false
            fi
            ;;
        procd)
            if [ -f /etc/init.d/zapret ]; then
                service_exists=true
            else
                service_exists=false
            fi
            ;;
        runit)
            ls /var/service | grep -q "zapret" && service_exists=true || service_exists=false
            ;;
        runit-artix)
            ls /run/runit/service | grep -q "zapret" && service_exists=true || service_exists=false
            ;;
        openrc)
            rc-service -l | grep -q "zapret" && service_exists=true || service_exists=false
            ;;
        sysvinit)
            [ -f /etc/init.d/zapret ] && service_exists=true || service_exists=false
            ;;
        *)
            ZAPRET_EXIST=false
            return
            ;;
    esac

    if [ -d /opt/zapret ]; then
        dir_exists=true
        [ -d /opt/zapret/binaries ] && binaries_exists=true || binaries_exists=false
    else
        dir_exists=false
        binaries_exists=false
    fi

    if [ "$service_exists" = true ] && [ "$dir_exists" = true ] && [ "$binaries_exists" = true ]; then
        ZAPRET_EXIST=true
    else
        ZAPRET_EXIST=false
    fi
}

check_zapret_status() {
    case "$INIT_SYSTEM" in
        systemd)
        ZAPRET_ACTIVE=$(systemctl show -p ActiveState zapret | cut -d= -f2 || true)
        ZAPRET_ENABLED=$(systemctl is-enabled zapret 2>/dev/null || echo "false")
        ZAPRET_SUBSTATE=$(systemctl show -p SubState zapret | cut -d= -f2)
        if [[ "$ZAPRET_ACTIVE" == "active" && "$ZAPRET_SUBSTATE" == "running" ]]; then
           ZAPRET_ACTIVE=true
        else
            ZAPRET_ACTIVE=false
        fi
        
        if [[ "$ZAPRET_ENABLED" == "enabled" ]]; then
            ZAPRET_ENABLED=true
        else
            ZAPRET_ENABLED=false
        fi
        if [[ "$ZAPRET_ENABLED" == "not-found" ]]; then
            ZAPRET_ENABLED=false
        fi
        ;;
        openrc)
            rc-service zapret status >/dev/null 2>&1 && ZAPRET_ACTIVE=true || ZAPRET_ACTIVE=false
            rc-update show | grep -q zapret && ZAPRET_ENABLED=true || ZAPRET_ENABLED=false
            ;;
        procd)
            
            if /etc/init.d/zapret status | grep -q "running"; then
                ZAPRET_ACTIVE=true
            else
                ZAPRET_ACTIVE=false
            fi
            if ls /etc/rc.d/ | grep -q zapret >/dev/null 2>&1; then
                ZAPRET_ENABLED=true
            else
                ZAPRET_ENABLED=false
            fi

            ;;
        runit)
            sv status zapret | grep -q "run" && ZAPRET_ACTIVE=true || ZAPRET_ACTIVE=false 
            ls /var/service | grep -q "zapret" && ZAPRET_ENABLED=true || ZAPRET_ENABLED=false
            ;;
        runit-artix)
            sv status zapret | grep -q "run" && ZAPRET_ACTIVE=true || ZAPRET_ACTIVE=false 
            ls /run/runit/service | grep -q "zapret" && ZAPRET_ENABLED=true || ZAPRET_ENABLED=false
            ;;
        sysvinit)
            service zapret status >/dev/null 2>&1 && ZAPRET_ACTIVE=true || ZAPRET_ACTIVE=false
            ;;
    esac
}

toggle_service() {
    while true; do
        clear
        echo -e "\e[1;36m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
        echo -e "‚ïë       üõ†Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–º –ó–∞–ø—Ä–µ—Ç–∞            ‚ïë"
        echo -e "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\e[0m"

        if [[ $ZAPRET_ACTIVE == true ]]; then 
            echo -e "  \e[1;32m‚úîÔ∏è –ó–∞–ø—Ä–µ—Ç –∑–∞–ø—É—â–µ–Ω\e[0m"
        else 
            echo -e "  \e[1;31m‚ùå –ó–∞–ø—Ä–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω\e[0m"
        fi

        if [[ $ZAPRET_ENABLED == true ]]; then 
            echo -e "  \e[1;32müîÅ –ó–∞–ø—Ä–µ—Ç –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–µ\e[0m"
        else 
            echo -e "  \e[1;33m‚èπÔ∏è –ó–∞–ø—Ä–µ—Ç –Ω–µ –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–µ\e[0m"
        fi

        echo ""

        echo -e "  \e[1;33m1)\e[0m $( [[ $ZAPRET_ENABLED == true ]] && echo "üö´ –£–±—Ä–∞—Ç—å –∏–∑ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏" || echo "‚úÖ –î–æ–±–∞–≤–∏—Ç—å –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É" )"
        echo -e "  \e[1;32m2)\e[0m $( [[ $ZAPRET_ACTIVE == true ]] && echo "‚õî –í—ã–∫–ª—é—á–∏—Ç—å –ó–∞–ø—Ä–µ—Ç" || echo "‚ñ∂Ô∏è –í–∫–ª—é—á–∏—Ç—å –ó–∞–ø—Ä–µ—Ç" )"
        echo -e "  \e[1;36m3)\e[0m üîç –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç—É—Å –ó–∞–ø—Ä–µ—Ç–∞"
        echo -e "  \e[1;35m4)\e[0m üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ó–∞–ø—Ä–µ—Ç"
        echo -e "  \e[1;31m5)\e[0m üö™ –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é"

        echo ""
        echo -e "\e[1;96m‚ú® –°–¥–µ–ª–∞–Ω–æ —Å –ª—é–±–æ–≤—å—é üíô\e[0m by: \e[4;94mhttps://t.me/linux_hi\e[0m"
        echo ""

        read -p $'\e[1;36m–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: \e[0m' CHOICE
        case "$CHOICE" in
            1) 
                [[ $ZAPRET_ENABLED == true ]] && manage_autostart disable || manage_autostart enable
                main_menu
                ;;
            2) 
                [[ $ZAPRET_ACTIVE == true ]] && manage_service stop || manage_service start
                main_menu
                ;;
            3) 
                manage_service status
                read -p $'\e[1;36m–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...\e[0m'
                main_menu
                ;;
            4) 
                manage_service restart
                main_menu
                ;;
            5) 
                main_menu
                ;;
            *) 
                echo -e "\e[1;31m‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\e[0m"
                sleep 2
                ;;
        esac
    done
} 

detect_init() {
    GET_LIST_PREFIX=/ipset/get_

    SYSTEMD_DIR=/lib/systemd
    [ -d "$SYSTEMD_DIR" ] || SYSTEMD_DIR=/usr/lib/systemd
    [ -d "$SYSTEMD_DIR" ] && SYSTEMD_SYSTEM_DIR="$SYSTEMD_DIR/system"

    INIT_SCRIPT=/etc/init.d/zapret
    if [ -d /run/systemd/system ]; then
        INIT_SYSTEM="systemd"
    elif [ $SYSTEM == openwrt ]; then
        INIT_SYSTEM="procd"
    elif command -v openrc-init >/dev/null 2>&1; then
        INIT_SYSTEM="openrc"
    elif command -v runit >/dev/null 2>&1; then
        INIT_SYSTEM="runit"
        [ -f /etc/os-release ] && . /etc/os-release
        if [ $ID = artix ]; then
            INIT_SYSTEM="runit-artix"
        fi
    elif [ -x /sbin/init ] && /sbin/init --version 2>&1 | grep -qi "sysv init"; then
        INIT_SYSTEM="sysvinit" 
    else
        error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å init."
    fi
}